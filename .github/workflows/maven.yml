# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Git checkout
        uses: actions/checkout@v2

      - name: Set up JDK 15
        uses: actions/setup-java@v1
        with:
          java-version: 15

      - name: Cache SonarCloud packages
        uses: actions/cache@v2
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Clean compile
        run: mvn clean compile

      # Ignore test failures so that all tests are run
      # The publish report step will take care of failing the build if needed
      # Use jacoco to prepare test coverage report for sonar
      - name: Execute tests
        run: mvn org.jacoco:jacoco-maven-plugin:prepare-agent test -Dmaven.test.failure.ignore=true

      - name: Publish test report
        uses: scacap/action-surefire-report@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          fail_on_test_failures: true
          fail_if_no_tests: true

      - name: Generate test coverage report
        run: mvn org.jacoco:jacoco-maven-plugin:report

      - name: Get file changes
        id: get_file_changes
        uses: trilom/file-changes-action@v1.2.3
        with:
          output: ' '
      - name: Echo file changes
        run: |
          for FILE in ${{ steps.get_file_changes.outputs.files }}; do echo $FILE | cut -d '/' -f 1; done | sort | uniq > changed-modules.txt
          echo Changed modules:
          cat changed-modules.txt

      - name: Analyze with sonar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
            mvn -f ./base/pom.xml -B org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
            mvn -f ./secondary/pom.xml org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
#            mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar

#      - name: Prepare artifact archive
#        run: mkdir target/archive && cp target/*.jar target/archive
#
#      - name: Upload artifact archive
#        uses: actions/upload-artifact@v2
#        with:
#          name: jars
#          path: target/archive
